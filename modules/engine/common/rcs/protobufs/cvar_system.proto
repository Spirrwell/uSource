syntax="proto2";

package rcs;

import "modules/engine/common/rcs/protobufs/common.proto";

/**
NOTES:

tid is the transaction ID associated with the message and is used to associate a response with a request
 */

/* Queries a convar's value from the engine. */
message QueryCvarRequest
{
  required uint32 tid = 1;
  required string name = 2;
}

message QueryCvarValueResponse
{
  required uint32 tid = 1;
  required string name = 2;
  required string value = 3;
}


/* Sets a Convar's value */
message SetCvarValueRequest
{
  required uint32 tid = 1;
  required string name = 2;
  required string value = 3;
}


/* Returns a list of convars */
message GetCvarListRequest
{
  required uint32 tid = 1;
  optional string filter = 2;
}

message GetCvarListResponse
{
  required uint32 tid = 1;
  required int32 num = 2;

  message Cvar {
    required string name = 1;
    required int32 flags = 2;
    required string value = 3;
  }
  repeated Cvar cvars = 3;
}


/* Executes a console command */
message ExecCommandRequest
{
  required uint32 tid = 1;
  // Full command string. Ex: mycommand arg1 arg2 arg3
  required string cmdstring = 2;
}

message ExecCommandResponse
{
  required uint32 tid = 1;
  required string output = 2;
}



/* Returns a list of all console commands */
message GetCommandListRequest
{
  required uint32 tid = 1;
  optional string filter = 2;
}

message GetCommandListResponse
{
  required uint32 tid = 1;
  required int32 num = 2;

  message Command {
    required string name = 1;
    required int32 flags = 2;
  }

  repeated Command commands = 3;
}




service ConvarService
{
  rpc QueryCvar(QueryCvarRequest) returns (QueryCvarValueResponse);
  rpc SetCvar(SetCvarValueRequest) returns (NullMessage);
  rpc GetCvarList(GetCvarListRequest) returns (GetCvarListResponse);
  rpc ExecCommand(ExecCommandRequest) returns (ExecCommandResponse);
  rpc GetCommandList(GetCommandListRequest) returns (GetCommandListResponse);
}
