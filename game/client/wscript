#! /usr/bin/env python
# encoding: utf-8
# a1batross, mittorn, 2018

from waflib import Utils
import os
 
def options(opt):
	# stub
	return

def configure(conf):
	if conf.env.GOLDSRC:
		if conf.env.DEST_OS != 'win32':
			conf.check_cc(lib='dl')

def build(bld):
	#source = bld.path.parent.ant_glob([
	#])
	source = []
	source += bld.path.parent.ant_glob(['shared/*.cpp'])
	source += [
		'hl/hl_baseentity.cpp',
		'hl/hl_events.cpp',
		'hl/hl_objects.cpp',
		'hl/hl_weapons.cpp',
		'../../pm_shared/pm_shared.cpp',
		'../../pm_shared/pm_math.cpp',
		'../../pm_shared/pm_debug.cpp',
		'../shared/hl1/weapon_crossbow.cpp',
		'../shared/hl1/weapon_crowbar.cpp',
		'../shared/hl1/weapon_egon.cpp',
		'../shared/hl1/weapon_gauss.cpp',
		'../shared/hl1/weapon_frag.cpp',
		'../shared/hl1/weapon_hornetgun.cpp',
		'../shared/hl1/weapon_mp5.cpp',
		'../shared/hl1/weapon_python.cpp',
		'../shared/hl1/weapon_rpg.cpp',
		'../shared/hl1/weapon_satchel.cpp',
		'../shared/hl1/weapon_shotgun.cpp',
		'../shared/hl1/weapon_squeakgrenade.cpp',
		'../shared/hl1/weapon_tripmine.cpp',
		'../shared/hl1/weapon_glock.cpp',
		#'../shared/game_shared.cpp',
		'client_commands.cpp',
		'ev_hldm.cpp', 'ammo.cpp', 'ammo_secondary.cpp', 'ammohistory.cpp',
		'battery.cpp', 'client_int.cpp', 'com_weapons.cpp', 'death.cpp',
		'demo.cpp', 'entity.cpp', 'ev_common.cpp', 'events.cpp',
		'flashlight.cpp', 'GameStudioModelRenderer.cpp', 'geiger.cpp',
		'health.cpp', 'hud.cpp', 'hud_msg.cpp', 'hud_redraw.cpp',
		'hud_spectator.cpp', 'hud_update.cpp', 'in_camera.cpp',
		'input.cpp', 'input_mouse.cpp',
		'input_xash3d.cpp', 'menu.cpp', 'message.cpp',
		'overview.cpp', 'parsemsg.cpp', 'saytext.cpp',
		'status_icons.cpp', 'statusbar.cpp', 'studio_util.cpp',
		'StudioModelRenderer.cpp', 'text_message.cpp', 'train.cpp',
		'tri.cpp', 'util.cpp', 'view.cpp', 'scoreboard.cpp', 'MOTD.cpp',
		'c_base_entity.cpp',
		'../shared/core/netvar.cpp'
	]
	#includes = Utils.to_list('. hl/ ../dlls ../dlls/wpn_shared ../common ../engine ../pm_shared ../game_shared ../public ../utils/false_vgui/include')
	includes = list()
	includes.append(bld.env.COMMON)
	includes.append(bld.env.PMSHARED)
	includes.append(bld.env.SHARED)
	includes.append(bld.env.PUBLIC)
	includes.append(bld.env.FAKEVGUI)
	includes.append(bld.env.SERVER)
	includes.append(bld.env.CLIENT)
	includes.append(bld.env.ENGINE)
	includes.append('./hl/')
	includes.append('../../')

	defines = ['CLIENT_DLL', 'CLIENT_WEAPONS']
	if bld.env.GOLDSRC:
		defines += ['GOLDSOURCE_SUPPORT']

	libs = ['public', 'mathlib', 'tier1', 'mainui']
	if bld.env.GOLDSRC:
		libs += ['DL']

	if bld.env.DEST_OS2 not in ['android']:
		install_path = os.path.join(bld.env.GAMEDIR, bld.env.CLIENT_DIR)
	else:
		install_path = bld.env.PREFIX

	bld.shlib(
		source   = source,
		target   = 'client',
		features = 'c cxx',
		includes = includes,
		defines  = defines,
		use      = libs,
		install_path = install_path,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx      = 1,
		name = 'client'
	)
